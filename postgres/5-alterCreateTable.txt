
CREATE TABLE account(
    id SERIAL,
    email VARCHAR(128) UNIQUE,
    created_at DATE NOT NULL DEFAULT NOW(),
    updated_at DATE NOT NULL DEFAULT NOW(),
    PRIMARY KEY(id)
);

CREATE TABLE post(
    id SERIAL,
    title VARCHAR(128) UNIQUE NOT NULL,
    content VARCHAR(1024), -- will extent with ALTER
    account_id INTEGER REFERENCES account(id) ON DELETE CASCADE,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    PRIMARY KEY(id)
);


-- Allow multiple comments
CREATE TABLE comment(
    id SERIAL,
    content TEXT NOT NULL,
    account_id INTEGER REFERENCES account(id) ON DELETE CASCADE,
    post_id INTEGER REFERENCES post(id) ON DELETE CASCADE,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    PRIMARY KEY(id)
);


CREATE TABLE fav(
    id SERIAL,
    oops TEXT, -- Will remove later with ALTER
    post_id INTEGER REFERENCES post(id) ON DELETE CASCADE,
    account_id INTEGER REFERENCES account(id) ON DELETE CASCADE,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    UNIQUE(post_id , account_id),
    PRIMARY KEY(id)
);

=> ALTER TABLE fav DROP COLUMN oops;

=> ALTER TABLE post ALTER COLUMN content TYPE TEXT;

=> ALTER TABLE fav ADD COLUMN howmuch INTEGER;


// DISTINCT

=> SELECT DISTINCT model FROM racing;

//  GROUP BY is combined with aggregate functions like COUNT() , MAX(),
    SUM(),....

=> SELECT COUNT(abbrev) , abbrev FROM pg_timezone_names GROUP BY abbrev;


// HAVING clause

=>  SELECT COUNT(abbrev) AS ct , abbrev FROM pg_timezone_names
    WHERE is_dst='t' GROUP BY abbrev HAVING COUNT(abbrev) > 10;
